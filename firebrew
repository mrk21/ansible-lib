#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import unicode_literals
from __future__ import absolute_import
from __future__ import generators
from __future__ import division

import pipes

from ansible.module_utils.basic import *

class Firebrew(object):
    STATUS_SUCCESS = 0
    STATUS_FAILURE = 1
    STATUS_NOT_CHANGED = 7
    
    def __init__(self, AnsibleModule = AnsibleModule):
        self.module = AnsibleModule(
            argument_spec = dict(
                state = dict(type='str', default='present', choices=['present', 'absent']),
                name = dict(type='str', required=True),
                base_dir = dict(type='str'),
                profile = dict(type='str'),
                firefox = dict(type='str')
            )
        )
    
    def build_command(self):
        params = self.module.params
        command = [
            self.module.get_bin_path('firebrew'),
            {'present': 'install', 'absent': 'uninstall'}[params['state']],
            pipes.quote(params['name'])
        ]
        for opt in ['base_dir','profile','firefox']:
            if opt in params and params[opt] != None and params[opt].strip() != '':
                command.append('--%s=%s' % (opt.replace('_','-'), pipes.quote(params[opt])))
        
        return ' '.join(command)
    
    def execute(self):
        (rc,out,err) = self.module.run_command(self.build_command())
        
        if rc == self.STATUS_SUCCESS:
            self.module.exit_json(changed=True)
        elif rc == self.STATUS_NOT_CHANGED:
            self.module.exit_json(changed=False)
        else:
            self.module.fail_json(msg = err)

if __name__ == '__main__':
    Firebrew().execute()
